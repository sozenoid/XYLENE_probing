#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jun 10 16:05:44 2020

@author: macenrola
"""

def find_molecule_symmetry_point_group(mol):
	"""
	PER  : Finds molecule symmetry using pymatgen
	POST : Returns the symmetry of the molecule
	"""
	pg =  symmetry.analyzer.PointGroupAnalyzer(mol)
	pg.symmetrize_molecule()
	sym_point_group = (pg.sch_symbol)
	return sym_point_group

def get_sigma(xyzfile):
	"""
	Parameters
	----------
	point_group : string
		DESCRIPTION. The point group of the molecule
	taken from http://symmetry.jacobs-university.de/
	https://en.wikipedia.org/wiki/Crystallographic_point_group
	http://gernot-katzers-spice-pages.com/character_tables/character_tables.tar.xz # THIS ONE HAS  THE IMPORTANT DATA
	# classes are the number of irreducible representations
	https://en.wikipedia.org/wiki/Character_table
	Returns
	-------
	The number of irreductible rotations for a molecule
	given its schoenflies notation
	"""
	mol = Molecule.from_file(xyzfile).get_centered_molecule()
	point_group = find_molecule_symmetry_point_group(mol)
	schoe_dic = read_schoe_dic()
	
	print(xyzfile, point_group ,schoe_dic[point_group])
	
	return point_group, schoe_dic[point_group]

def get_all_rotational_numbers_for_sym_groups(file_with_all_tables="/home/macenrola/Documents/ML/ChemTS/new_scoring_for_mcts/character_tables"):
	"""
	it is assumed that we have access to all the space groups descriptions provided by:
	http://gernot-katzers-spice-pages.com/character_tables/character_tables.tar.xz # THIS ONE HAS  THE IMPORTANT DATA
	Returns
	-------
	A dictionary with all spacegroups and associated rotational numbers
	"""
	flist = sorted(glob.glob(file_with_all_tables+"/*lis"))
	schoe_dic = {}
	for f in flist:
		with open(f, "r") as r:
			lines = r.readlines()
			operations = lines[1].split() # all the data of interest to us is in line 1
			res = 0
			for i, ops in enumerate(operations[1:]):
				if ops[0] == "C":
					try:
						c = int(operations[i]) # SAME AS operations[1:][i-1]
						res+=c
					except:
						res+=1
				elif ops == "E":
					res+=1
			schoe_dic[operations[0]] = res
# =============================================================================
# 	with open("sigma_point_group", "w") as w:
# 		for k in sorted(schoe_dic):
# 			w.write("{}\t{}\n".format(k, schoe_dic[k]))
# =============================================================================
	return schoe_dic

def read_schoe_dic():
	"""
	Parameters
	----------
	Returns
	-------
	Returns the dictionary that is hardcoded here below
	the dic associates the schoenflies notation of a point group and its symmetry number 
	to be introduced in the rotational partition function 
	"""
	s_dic = {'C1': 1, 'C10': 10, 'C100': 100, 'C100h': 100, 'C100v': 100, 'C101': 101, 'C101h': 101, 'C101v': 101, 'C102': 102, 'C102h': 102, 'C102v': 102, 'C103': 103, 'C103h': 103, 'C103v': 103, 'C104': 104, 'C104h': 104, 'C104v': 104, 'C105': 105, 'C105h': 105, 'C105v': 105, 'C106': 106, 'C106h': 106, 'C106v': 106, 'C107': 107, 'C107h': 107, 'C107v': 107, 'C108': 108, 'C108h': 108, 'C108v': 108, 'C109': 109, 'C109h': 109, 'C109v': 109, 'C10h': 10, 'C10v': 10, 'C11': 11, 'C110': 110, 'C110h': 110, 'C110v': 110, 'C111': 111, 'C111h': 111, 'C111v': 111, 'C112': 112, 'C112h': 112, 'C112v': 112, 'C113': 113, 'C113h': 113, 'C113v': 113, 'C114': 114, 'C114h': 114, 'C114v': 114, 'C115': 115, 'C115h': 115, 'C115v': 115, 'C116': 116, 'C116h': 116, 'C116v': 116, 'C117': 117, 'C117h': 117, 'C117v': 117, 'C118': 118, 'C118h': 118, 'C118v': 118, 'C119': 119, 'C119h': 119, 'C119v': 119, 'C11h': 11, 'C11v': 11, 'C12': 12, 'C120': 120, 'C120h': 120, 'C120v': 120, 'C121': 121, 'C121h': 121, 'C121v': 121, 'C122': 122, 'C122h': 122, 'C122v': 122, 'C123': 123, 'C123h': 123, 'C123v': 123, 'C124': 124, 'C124h': 124, 'C124v': 124, 'C125': 125, 'C125h': 125, 'C125v': 125, 'C126': 126, 'C126h': 126, 'C126v': 126, 'C127': 127, 'C127h': 127, 'C127v': 127, 'C128': 128, 'C128h': 128, 'C128v': 128, 'C12h': 12, 'C12v': 12, 'C13': 13, 'C136': 136, 'C136h': 136, 'C136v': 136, 'C13h': 13, 'C13v': 13, 'C14': 14, 'C14h': 14, 'C14v': 14, 'C15': 15, 'C153': 153, 'C153h': 153, 'C153v': 153, 'C15h': 15, 'C15v': 15, 'C16': 16, 'C160': 160, 'C160h': 160, 'C160v': 160, 'C16h': 16, 'C16v': 16, 'C17': 17, 'C170': 170, 'C170h': 170, 'C170v': 170, 'C17h': 17, 'C17v': 17, 'C18': 18, 'C18h': 18, 'C18v': 18, 'C19': 19, 'C192': 192, 'C192h': 192, 'C192v': 192, 'C19h': 19, 'C19v': 19, 'C1h': 1, 'C1v': 1, 'C2': 2, 'C20': 20, 'C204': 204, 'C204h': 204, 'C204v': 204, 'C20h': 20, 'C20v': 20, 'C21': 21, 'C21h': 21, 'C21v': 21, 'C22': 22, 'C22h': 22, 'C22v': 22, 'C23': 23, 'C23h': 23, 'C23v': 23, 'C24': 24, 'C240': 240, 'C240h': 240, 'C240v': 240, 'C24h': 24, 'C24v': 24, 'C25': 25, 'C255': 255, 'C255h': 255, 'C255v': 255, 'C256': 256, 'C256h': 256, 'C256v': 256, 'C257': 257, 'C257h': 257, 'C257v': 257, 'C25h': 25, 'C25v': 25, 'C26': 26, 'C26h': 26, 'C26v': 26, 'C27': 27, 'C27h': 27, 'C27v': 27, 'C28': 28, 'C28h': 28, 'C28v': 28, 'C29': 29, 'C29h': 29, 'C29v': 29, 'C2h': 2, 'C2v': 2, 'C3': 3, 'C30': 30, 'C30h': 30, 'C30v': 30, 'C31': 31, 'C31h': 31, 'C31v': 31, 'C32': 32, 'C32h': 32, 'C32v': 32, 'C33': 33, 'C33h': 33, 'C33v': 33, 'C34': 34, 'C340': 340, 'C340h': 340, 'C340v': 340, 'C34h': 34, 'C34v': 34, 'C35': 35, 'C35h': 35, 'C35v': 35, 'C36': 36, 'C36h': 36, 'C36v': 36, 'C37': 37, 'C37h': 37, 'C37v': 37, 'C38': 38, 'C38h': 38, 'C38v': 38, 'C39': 39, 'C39h': 39, 'C39v': 39, 'C3h': 3, 'C3v': 3, 'C4': 4, 'C40': 40, 'C40h': 40, 'C40v': 40, 'C41': 41, 'C41h': 41, 'C41v': 41, 'C42': 42, 'C42h': 42, 'C42v': 42, 'C43': 43, 'C43h': 43, 'C43v': 43, 'C44': 44, 'C44h': 44, 'C44v': 44, 'C45': 45, 'C45h': 45, 'C45v': 45, 'C46': 46, 'C46h': 46, 'C46v': 46, 'C47': 47, 'C47h': 47, 'C47v': 47, 'C48': 48, 'C48h': 48, 'C48v': 48, 'C49': 49, 'C49h': 49, 'C49v': 49, 'C4h': 4, 'C4v': 4, 'C5': 5, 'C50': 50, 'C50h': 50, 'C50v': 50, 'C51': 51, 'C512': 512, 'C512h': 512, 'C512v': 512, 'C51h': 51, 'C51v': 51, 'C52': 52, 'C52h': 52, 'C52v': 52, 'C53': 53, 'C53h': 53, 'C53v': 53, 'C54': 54, 'C54h': 54, 'C54v': 54, 'C55': 55, 'C55h': 55, 'C55v': 55, 'C56': 56, 'C56h': 56, 'C56v': 56, 'C57': 57, 'C57h': 57, 'C57v': 57, 'C58': 58, 'C58h': 58, 'C58v': 58, 'C59': 59, 'C59h': 59, 'C59v': 59, 'C5h': 5, 'C5v': 5, 'C6': 6, 'C60': 60, 'C60h': 60, 'C60v': 60, 'C61': 61, 'C61h': 61, 'C61v': 61, 'C62': 62, 'C62h': 62, 'C62v': 62, 'C63': 63, 'C63h': 63, 'C63v': 63, 'C64': 64, 'C64h': 64, 'C64v': 64, 'C65': 65, 'C65h': 65, 'C65v': 65, 'C66': 66, 'C66h': 66, 'C66v': 66, 'C67': 67, 'C67h': 67, 'C67v': 67, 'C68': 68, 'C68h': 68, 'C68v': 68, 'C69': 69, 'C69h': 69, 'C69v': 69, 'C6h': 6, 'C6v': 6, 'C7': 7, 'C70': 70, 'C70h': 70, 'C70v': 70, 'C71': 71, 'C71h': 71, 'C71v': 71, 'C72': 72, 'C72h': 72, 'C72v': 72, 'C73': 73, 'C73h': 73, 'C73v': 73, 'C74': 74, 'C74h': 74, 'C74v': 74, 'C75': 75, 'C75h': 75, 'C75v': 75, 'C76': 76, 'C76h': 76, 'C76v': 76, 'C77': 77, 'C77h': 77, 'C77v': 77, 'C78': 78, 'C78h': 78, 'C78v': 78, 'C79': 79, 'C79h': 79, 'C79v': 79, 'C7h': 7, 'C7v': 7, 'C8': 8, 'C80': 80, 'C80h': 80, 'C80v': 80, 'C81': 81, 'C81h': 81, 'C81v': 81, 'C82': 82, 'C82h': 82, 'C82v': 82, 'C83': 83, 'C83h': 83, 'C83v': 83, 'C84': 84, 'C84h': 84, 'C84v': 84, 'C85': 85, 'C85h': 85, 'C85v': 85, 'C86': 86, 'C86h': 86, 'C86v': 86, 'C87': 87, 'C87h': 87, 'C87v': 87, 'C88': 88, 'C88h': 88, 'C88v': 88, 'C89': 89, 'C89h': 89, 'C89v': 89, 'C8h': 8, 'C8v': 8, 'C9': 9, 'C90': 90, 'C90h': 90, 'C90v': 90, 'C91': 91, 'C91h': 91, 'C91v': 91, 'C92': 92, 'C92h': 92, 'C92v': 92, 'C93': 93, 'C93h': 93, 'C93v': 93, 'C94': 94, 'C94h': 94, 'C94v': 94, 'C95': 95, 'C95h': 95, 'C95v': 95, 'C96': 96, 'C96h': 96, 'C96v': 96, 'C97': 97, 'C97h': 97, 'C97v': 97, 'C98': 98, 'C98h': 98, 'C98v': 98, 'C99': 99, 'C99h': 99, 'C99v': 99, 'C9h': 9, 'C9v': 9, 'D1': 2, 'D10': 20, 'D100': 200, 'D100d': 200, 'D100h': 200, 'D101': 202, 'D101d': 202, 'D101h': 202, 'D102': 204, 'D102d': 204, 'D102h': 204, 'D103': 206, 'D103d': 206, 'D103h': 206, 'D104': 208, 'D104d': 208, 'D104h': 208, 'D105': 210, 'D105d': 210, 'D105h': 210, 'D106': 212, 'D106d': 212, 'D106h': 212, 'D107': 214, 'D107d': 214, 'D107h': 214, 'D108': 216, 'D108d': 216, 'D108h': 216, 'D109': 218, 'D109d': 218, 'D109h': 218, 'D10d': 20, 'D10h': 20, 'D11': 22, 'D110': 220, 'D110d': 220, 'D110h': 220, 'D111': 222, 'D111d': 222, 'D111h': 222, 'D112': 224, 'D112d': 224, 'D112h': 224, 'D113': 226, 'D113d': 226, 'D113h': 226, 'D114': 228, 'D114d': 228, 'D114h': 228, 'D115': 230, 'D115d': 230, 'D115h': 230, 'D116': 232, 'D116d': 232, 'D116h': 232, 'D117': 234, 'D117d': 234, 'D117h': 234, 'D118': 236, 'D118d': 236, 'D118h': 236, 'D119': 238, 'D119d': 238, 'D119h': 238, 'D11d': 22, 'D11h': 22, 'D12': 24, 'D120': 240, 'D120d': 240, 'D120h': 240, 'D121': 242, 'D121d': 242, 'D121h': 242, 'D122': 244, 'D122d': 244, 'D122h': 244, 'D123': 246, 'D123d': 246, 'D123h': 246, 'D124': 248, 'D124d': 248, 'D124h': 248, 'D125': 250, 'D125d': 250, 'D125h': 250, 'D126': 252, 'D126d': 252, 'D126h': 252, 'D127': 254, 'D127d': 254, 'D127h': 254, 'D128': 256, 'D128d': 256, 'D128h': 256, 'D12d': 24, 'D12h': 24, 'D13': 26, 'D136': 272, 'D136d': 272, 'D136h': 272, 'D13d': 26, 'D13h': 26, 'D14': 28, 'D14d': 28, 'D14h': 28, 'D15': 30, 'D153': 306, 'D153d': 306, 'D153h': 306, 'D15d': 30, 'D15h': 30, 'D16': 32, 'D160': 320, 'D160d': 320, 'D160h': 320, 'D16d': 32, 'D16h': 32, 'D17': 34, 'D170': 340, 'D170d': 340, 'D170h': 340, 'D17d': 34, 'D17h': 34, 'D18': 36, 'D18d': 36, 'D18h': 36, 'D19': 38, 'D192': 384, 'D192d': 384, 'D192h': 384, 'D19d': 38, 'D19h': 38, 'D1d': 2, 'D1h': 2, 'D2': 4, 'D20': 40, 'D204': 408, 'D204d': 408, 'D204h': 408, 'D20d': 40, 'D20h': 40, 'D21': 42, 'D21d': 42, 'D21h': 42, 'D22': 44, 'D22d': 44, 'D22h': 44, 'D23': 46, 'D23d': 46, 'D23h': 46, 'D24': 48, 'D240': 480, 'D240d': 480, 'D240h': 480, 'D24d': 48, 'D24h': 48, 'D25': 50, 'D255': 510, 'D255d': 510, 'D255h': 510, 'D256': 512, 'D256d': 512, 'D256h': 512, 'D257': 514, 'D257d': 514, 'D257h': 514, 'D25d': 50, 'D25h': 50, 'D26': 52, 'D26d': 52, 'D26h': 52, 'D27': 54, 'D27d': 54, 'D27h': 54, 'D28': 56, 'D28d': 56, 'D28h': 56, 'D29': 58, 'D29d': 58, 'D29h': 58, 'D2d': 4, 'D2h': 4, 'D3': 6, 'D30': 60, 'D30d': 60, 'D30h': 60, 'D31': 62, 'D31d': 62, 'D31h': 62, 'D32': 64, 'D32d': 64, 'D32h': 64, 'D33': 66, 'D33d': 66, 'D33h': 66, 'D34': 68, 'D340': 680, 'D340d': 680, 'D340h': 680, 'D34d': 68, 'D34h': 68, 'D35': 70, 'D35d': 70, 'D35h': 70, 'D36': 72, 'D36d': 72, 'D36h': 72, 'D37': 74, 'D37d': 74, 'D37h': 74, 'D38': 76, 'D38d': 76, 'D38h': 76, 'D39': 78, 'D39d': 78, 'D39h': 78, 'D3d': 6, 'D3h': 6, 'D4': 8, 'D40': 80, 'D40d': 80, 'D40h': 80, 'D41': 82, 'D41d': 82, 'D41h': 82, 'D42': 84, 'D42d': 84, 'D42h': 84, 'D43': 86, 'D43d': 86, 'D43h': 86, 'D44': 88, 'D44d': 88, 'D44h': 88, 'D45': 90, 'D45d': 90, 'D45h': 90, 'D46': 92, 'D46d': 92, 'D46h': 92, 'D47': 94, 'D47d': 94, 'D47h': 94, 'D48': 96, 'D48d': 96, 'D48h': 96, 'D49': 98, 'D49d': 98, 'D49h': 98, 'D4d': 8, 'D4h': 8, 'D5': 10, 'D50': 100, 'D50d': 100, 'D50h': 100, 'D51': 102, 'D512': 1024, 'D512d': 1024, 'D512h': 1024, 'D51d': 102, 'D51h': 102, 'D52': 104, 'D52d': 104, 'D52h': 104, 'D53': 106, 'D53d': 106, 'D53h': 106, 'D54': 108, 'D54d': 108, 'D54h': 108, 'D55': 110, 'D55d': 110, 'D55h': 110, 'D56': 112, 'D56d': 112, 'D56h': 112, 'D57': 114, 'D57d': 114, 'D57h': 114, 'D58': 116, 'D58d': 116, 'D58h': 116, 'D59': 118, 'D59d': 118, 'D59h': 118, 'D5d': 10, 'D5h': 10, 'D6': 12, 'D60': 120, 'D60d': 120, 'D60h': 120, 'D61': 122, 'D61d': 122, 'D61h': 122, 'D62': 124, 'D62d': 124, 'D62h': 124, 'D63': 126, 'D63d': 126, 'D63h': 126, 'D64': 128, 'D64d': 128, 'D64h': 128, 'D65': 130, 'D65d': 130, 'D65h': 130, 'D66': 132, 'D66d': 132, 'D66h': 132, 'D67': 134, 'D67d': 134, 'D67h': 134, 'D68': 136, 'D68d': 136, 'D68h': 136, 'D69': 138, 'D69d': 138, 'D69h': 138, 'D6d': 12, 'D6h': 12, 'D7': 14, 'D70': 140, 'D70d': 140, 'D70h': 140, 'D71': 142, 'D71d': 142, 'D71h': 142, 'D72': 144, 'D72d': 144, 'D72h': 144, 'D73': 146, 'D73d': 146, 'D73h': 146, 'D74': 148, 'D74d': 148, 'D74h': 148, 'D75': 150, 'D75d': 150, 'D75h': 150, 'D76': 152, 'D76d': 152, 'D76h': 152, 'D77': 154, 'D77d': 154, 'D77h': 154, 'D78': 156, 'D78d': 156, 'D78h': 156, 'D79': 158, 'D79d': 158, 'D79h': 158, 'D7d': 14, 'D7h': 14, 'D8': 16, 'D80': 160, 'D80d': 160, 'D80h': 160, 'D81': 162, 'D81d': 162, 'D81h': 162, 'D82': 164, 'D82d': 164, 'D82h': 164, 'D83': 166, 'D83d': 166, 'D83h': 166, 'D84': 168, 'D84d': 168, 'D84h': 168, 'D85': 170, 'D85d': 170, 'D85h': 170, 'D86': 172, 'D86d': 172, 'D86h': 172, 'D87': 174, 'D87d': 174, 'D87h': 174, 'D88': 176, 'D88d': 176, 'D88h': 176, 'D89': 178, 'D89d': 178, 'D89h': 178, 'D8d': 16, 'D8h': 16, 'D9': 18, 'D90': 180, 'D90d': 180, 'D90h': 180, 'D91': 182, 'D91d': 182, 'D91h': 182, 'D92': 184, 'D92d': 184, 'D92h': 184, 'D93': 186, 'D93d': 186, 'D93h': 186, 'D94': 188, 'D94d': 188, 'D94h': 188, 'D95': 190, 'D95d': 190, 'D95h': 190, 'D96': 192, 'D96d': 192, 'D96h': 192, 'D97': 194, 'D97d': 194, 'D97h': 194, 'D98': 196, 'D98d': 196, 'D98h': 196, 'D99': 198, 'D99d': 198, 'D99h': 198, 'D9d': 18, 'D9h': 18, 'I': 60, 'Ih': 60, 'O': 24, 'Oh': 24, 'S10': 5, 'S100': 50, 'S102': 51, 'S104': 52, 'S106': 53, 'S108': 54, 'S110': 55, 'S112': 56, 'S114': 57, 'S116': 58, 'S118': 59, 'S12': 6, 'S120': 60, 'S122': 61, 'S124': 62, 'S126': 63, 'S128': 64, 'S136': 68, 'S14': 7, 'S16': 8, 'S160': 80, 'S170': 85, 'S18': 9, 'S192': 96, 'S2': 1, 'S20': 10, 'S204': 102, 'S22': 11, 'S24': 12, 'S240': 120, 'S256': 128, 'S26': 13, 'S28': 14, 'S30': 15, 'S32': 16, 'S34': 17, 'S340': 170, 'S36': 18, 'S38': 19, 'S4': 2, 'S40': 20, 'S42': 21, 'S44': 22, 'S46': 23, 'S48': 24, 'S50': 25, 'S512': 256, 'S52': 26, 'S54': 27, 'S56': 28, 'S58': 29, 'S6': 3, 'S60': 30, 'S62': 31, 'S64': 32, 'S66': 33, 'S68': 34, 'S70': 35, 'S72': 36, 'S74': 37, 'S76': 38, 'S78': 39, 'S8': 4, 'S80': 40, 'S82': 41, 'S84': 42, 'S86': 43, 'S88': 44, 'S90': 45, 'S92': 46, 'S94': 47, 'S96': 48, 'S98': 49, 'T': 12, 'Td': 12, 'Th': 12}
	return s_dic

if __name__ == "__main__":
	from pymatgen import Lattice, Structure, Molecule, symmetry
	import os
	import numpy as np
	import scipy.linalg
	import glob, sys
	
	if len(sys.argv)==1:
		print("""
please use this script as:
	/home/macenrola/anaconda3/envs/chemvae/bin/python path_to/find_symmetry_number_and_point_group.py path_to_xyz_file
	the python executable needs access to pymatgen, the schoenflies/sigma correspondence dictionary is hardcoded
""")
	else:
		get_sigma(sys.argv[1])
	

